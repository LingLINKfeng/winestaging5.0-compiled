From e015956f133594c51f5f1e7baccf3fe56ef7d83f Mon Sep 17 00:00:00 2001
From: Paul Gofman <gofmanp@gmail.com>
Date: Wed, 15 Jan 2020 17:05:09 +0300
Subject: [PATCH] ntdll: Permanently exclude natively mapped areas from free
 areas list.

---
 dlls/ntdll/virtual.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/dlls/ntdll/virtual.c b/dlls/ntdll/virtual.c
index 2951b5b15b..3617dcf348 100644
--- a/dlls/ntdll/virtual.c
+++ b/dlls/ntdll/virtual.c
@@ -110,6 +110,9 @@ static const BYTE VIRTUAL_Win32Flags[16] =
 
 static struct wine_rb_tree views_tree;
 
+static void *last_already_mapped;
+static size_t last_already_mapped_size;
+
 static RTL_CRITICAL_SECTION csVirtual;
 static RTL_CRITICAL_SECTION_DEBUG critsect_debug =
 {
@@ -585,6 +588,13 @@ static void* try_map_free_area( void *base, void *end, ptrdiff_t step,
         if (ptr != (void *)-1)
             munmap( ptr, size );
 
+        if (!last_already_mapped && step)
+        {
+            last_already_mapped = start;
+            last_already_mapped_size = step > 0 ? step : -step;
+            last_already_mapped_size = min(last_already_mapped_size, (char *)end - (char *)start);
+        }
+
         if ((step > 0 && (char *)end - (char *)start < step) ||
             (step < 0 && (char *)start - (char *)base < -step) ||
             step == 0)
@@ -1156,6 +1166,8 @@ static int alloc_free_area_callback( void *base, size_t area_size, void *arg )
     ptrdiff_t step = alloc->top_down ? -(alloc->mask + 1) : (alloc->mask + 1);
     void *start;
 
+    TRACE("base %p, area_size %p, size %p.\n", base, (void *)area_size, (void *)size);
+
     if (base < address_space_start) base = address_space_start;
     if (is_beyond_limit( base, size, alloc->limit )) end = alloc->limit;
     if (base >= end) return 0;
@@ -1287,11 +1299,21 @@ static NTSTATUS map_view( struct file_view **view_ret, void *base, size_t size,
             goto done;
         }
 
+
         if (is_win64 || zero_bits_64)
         {
+            last_already_mapped = NULL;
+
             if (!wine_mmap_enum_free_areas( alloc_free_area_callback, &alloc, top_down ))
                 return STATUS_NO_MEMORY;
 
+            if (last_already_mapped)
+            {
+                TRACE("Permanently excluding %p - %p from free list.\n",
+                        last_already_mapped, (char *)last_already_mapped + last_already_mapped_size - 1);
+                wine_mmap_remove_free_area(last_already_mapped, last_already_mapped_size, 0);
+            }
+
             ptr = alloc.result;
             TRACE( "got mem in free area %p-%p\n", ptr, (char *)ptr + size );
             goto done;
-- 
2.24.1

